-- Script : sae204_e24_partie2.sql
-- Auteur : LE SECH & LE CHEVERE - Groupe 1E2
-- Date : 13 juin 2025
--
-- Ce script SQL sert à remplir la base de données définie dans le schéma
-- 'sae204_partie2_schema.sql' en important les données réelles provenant de 
-- différentes sources de l'IUT de Lannion : admissions, inscriptions, résultats.
--
--
-- Réflexion sur l'efficacité computationnelle et énergétique : 
--
-- Pour ce projet, on a cherché à limiter au maximum la charge sur le système,
-- tout en gardant un import fiable et complet. Voici comment on s'y est pris :
--
-- 1. Relâchement temporaire des contraintes :
--    - On enlève temporairement les contraintes `NOT NULL` et les clés étrangères
--      au début pour éviter que des erreurs bloquent l'import.
--    - On remet les contraintes une fois les données nettoyées et vérifiées.
--
-- 2. Import en gros blocs :
--    - On utilise `WbImport` pour importer les fichiers complets d'un coup, 
--      ce qui évite de faire des insertions ligne par ligne, souvent longues.
--    - On active `-continueOnError=true` pour que le script ne s'arrête pas si 
--      quelques lignes posent problème.
--
-- 3. Nettoyage des données en base :
--    - Les valeurs spéciales comme `~` ou `-c-` sont gérées directement avec du SQL
--      après import, plutôt que de faire ça en dehors.
--    - On utilise des `JOIN` et `SELECT DISTINCT` pour garantir que les données
--      finales soient cohérentes et sans doublons.
--
-- Cette méthode nous a permis de faire tourner le script rapidement et sans 
-- consommer trop de ressources. En plus, ça réduit les risques d'erreurs qui 
-- feraient perdre du temps.
--
--
-- Vues envisagées pour la suite du projet (Partie 3)
--
-- 1. vue_moyennes_par_ue :
--    - Calculer les moyennes par étudiant et par UE, avec indication si validée ou pas.
--
-- 2. vue_resultats_semestre :
--    - Résumer les résultats par étudiant et semestre : moyenne générale, validation,
--      UE à repasser, capitalisation.
--
-- 3. vue_statistiques_ue :
--    - Statistiques globales par UE : moyenne, taux de réussite, écart-type.
--
-- 4. vue_decision_cpj :
--    - Synthèse pour la Commission Préparatoire au Jury (CPJ) avec les décisions
--      recommandées, redoublements, UE capitalisées, etc.
--
-----------------------------------------------------------------------------
-- Pour que sa fonctionne il faut mettre le dossier data avec tout les fichiers csv dedans dans le même répertoire que ce fichier sql.
DROP SCHEMA IF EXISTS partie2 CASCADE;
CREATE SCHEMA partie2;
SET SCHEMA 'partie2';



CREATE TABLE partie2._individu 
(
  ine              CHARACTER(11) NOT NULL,
  nom              CHARACTER VARYING(50) NOT NULL,
  prenom           CHARACTER VARYING(50) NOT NULL,
  date_naissance   DATE NOT NULL,
  code_postal      CHARACTER VARYING(10),
  ville            CHARACTER VARYING(50),
  sexe             CHARACTER VARYING(50) NOT NULL,
  nationalite      CHARACTER VARYING(50) NOT NULL
);
ALTER TABLE ONLY partie2._individu ADD CONSTRAINT pk_individu PRIMARY KEY (ine);



CREATE TABLE partie2._candidat 
(
  no_candidat           SERIAL NOT NULL,
  classement            CHARACTER VARYING(100),
  boursier_lycee        CHARACTER VARYING(100) NOT NULL,
  profil_candidat       CHARACTER VARYING(100) NOT NULL,
  etablissement         CHARACTER VARYING(100),
  dept_etablissement    CHARACTER VARYING(100),
  ville_etablissement   CHARACTER VARYING(100) NOT NULL,
  niveau_etude          CHARACTER VARYING(100),
  type_formation_prec   CHARACTER VARYING(150),
  serie_prec            CHARACTER VARYING(150),
  dominante_prec        CHARACTER VARYING(150),
  specialite_prec       CHARACTER VARYING(150),
  lv1                   CHARACTER VARYING(100),
  lv2                   CHARACTER VARYING(100),
  ine                   CHARACTER(11) NOT NULL
);
ALTER TABLE ONLY partie2._candidat ADD CONSTRAINT pk_candidat PRIMARY KEY (no_candidat);
ALTER TABLE ONLY partie2._candidat ADD CONSTRAINT fk_candidat_individu FOREIGN KEY (ine) REFERENCES partie2._individu (ine);



CREATE TABLE partie2._etudiant 
(
  code_nip                   CHARACTER(11) NOT NULL,
  cat_socio_etud             CHARACTER VARYING(100) NOT NULL,
  cat_socio_parent           CHARACTER VARYING(100) NOT NULL,
  bourse_superieur           CHARACTER VARYING(100),
  mention_bac                CHARACTER VARYING(100),
  serie_bac                  CHARACTER VARYING(100) NOT NULL,
  dominante_bac              CHARACTER VARYING(100),
  specialite_bac             CHARACTER VARYING(100),
  mois_annee_obtention_bac   CHARACTER(40),
  ine                        CHARACTER(11) NOT NULL
);
ALTER TABLE ONLY partie2._etudiant ADD CONSTRAINT pk_etudiant PRIMARY KEY (code_nip);
ALTER TABLE ONLY partie2._etudiant ADD CONSTRAINT fk_etudiant_individu FOREIGN KEY (ine) REFERENCES partie2._individu (ine);



CREATE TABLE partie2._semestre 
(
  num_semestre   CHARACTER VARYING(5) NOT NULL,
  annee_univ     CHARACTER(9) NOT NULL
);
ALTER TABLE ONLY partie2._semestre ADD CONSTRAINT pk_semestre PRIMARY KEY (num_semestre,annee_univ);



CREATE TABLE partie2._inscription 
(
  groupe_tp                CHARACTER(2),
  amenagement_evaluation   CHARACTER VARYING(50),
  code_nip                 CHARACTER(11) NOT NULL,
  num_semestre             CHARACTER VARYING(5) NOT NULL,
  annee_univ               CHARACTER(9) NOT NULL
);
ALTER TABLE ONLY partie2._inscription ADD CONSTRAINT pk_inscription PRIMARY KEY (code_nip,num_semestre,annee_univ);
ALTER TABLE ONLY partie2._inscription ADD CONSTRAINT fk_inscription_etudiant FOREIGN KEY (code_nip) REFERENCES partie2._etudiant (code_nip);
ALTER TABLE ONLY partie2._inscription ADD CONSTRAINT fk_inscription_semestre FOREIGN KEY (num_semestre,annee_univ) REFERENCES partie2._semestre (num_semestre,annee_univ);



CREATE TABLE partie2._module 
(
  id_module        CHARACTER VARYING(6) NOT NULL,
  libelle_module   CHARACTER VARYING(150) NOT NULL,
  ue               CHARACTER(4) NOT NULL
);
ALTER TABLE ONLY partie2._module ADD CONSTRAINT pk_module PRIMARY KEY (id_module);



CREATE TABLE partie2._programme 
(
  coefficient    NUMERIC(3,1) NOT NULL,
  num_semestre   CHARACTER VARYING(5) NOT NULL,
  annee_univ     CHARACTER(9) NOT NULL,
  id_module      CHARACTER VARYING(6) NOT NULL
);
ALTER TABLE ONLY partie2._programme ADD CONSTRAINT pk_programme PRIMARY KEY (num_semestre,annee_univ,id_module);
ALTER TABLE ONLY partie2._programme ADD CONSTRAINT fk_programme_module FOREIGN KEY (id_module) REFERENCES partie2._module (id_module);
ALTER TABLE ONLY partie2._programme ADD CONSTRAINT fk_programme_semestre FOREIGN KEY (num_semestre,annee_univ) REFERENCES partie2._semestre (num_semestre,annee_univ);



CREATE TABLE partie2._resultat 
(
  moyenne        NUMERIC(4,2) NOT NULL,
  code_nip       CHARACTER(11) NOT NULL,
  num_semestre   CHARACTER VARYING(5) NOT NULL,
  annee_univ     CHARACTER(9) NOT NULL,
  id_module      CHARACTER VARYING(6) NOT NULL
);
ALTER TABLE ONLY partie2._resultat ADD CONSTRAINT pk_resultat PRIMARY KEY (code_nip,num_semestre,annee_univ,id_module);
ALTER TABLE ONLY partie2._resultat ADD CONSTRAINT _resultat_fk_inscription FOREIGN KEY (code_nip,annee_univ,num_semestre) REFERENCES _inscription (code_nip,annee_univ,num_semestre);
ALTER TABLE ONLY partie2._resultat ADD CONSTRAINT _resultat_fk_programme FOREIGN KEY (id_module,annee_univ,num_semestre) REFERENCES _programme (id_module,annee_univ,num_semestre);
--------------------------------------------------------------------------------------------------------------------------------------------------------------------
--INDIVIDU

WbImport -file="data/v_inscriptions.csv"
         -type=text
         -table=partie2._individu
         -mode=insertIgnore
         -continueOnError=true
         -fileColumns=$wb_skip$,$wb_skip$,$wb_skip$,$wb_skip$,$wb_skip$,ine,nom,prenom,date_naissance,sexe,nationalite,code_postal,ville
         -delimiter=';'
         -header=true
         -keyColumns=ine;
         
WbImport -file="data/v_candidatures.csv"
         -type=text
         -table=partie2._individu
         -mode=insertIgnore
         -continueOnError=true
         -fileColumns=$wb_skip$,$wb_skip$,$wb_skip$,nom,prenom,sexe,date_naissance,nationalite,code_postal,ville,$wb_skip$,$wb_skip$,$wb_skip$,ine
         -delimiter=';'
         -header=true
         -keyColumns=ine;

SELECT *
FROM partie2._individu;
--------------------------------------------------------------------------------------------------------------------------------------------------------------------
--CANDIDAT

ALTER TABLE partie2._candidat ALTER COLUMN ville_etablissement DROP NOT NULL;

WbImport -file="data/v_candidatures.csv"
         -type=text
         -table=partie2._candidat
         -mode=insertIgnore
         -continueOnError=true
         -fileColumns=$wb_skip$,$wb_skip$,classement,$wb_skip$,$wb_skip$,$wb_skip$,$wb_skip$,$wb_skip$,$wb_skip$,$wb_skip$,$wb_skip$,boursier_lycee,profil_candidat,ine,$wb_skip$,etablissement,ville_etablissement,dept_etablissement,$wb_skip$,niveau_etude,type_formation_prec,serie_prec,dominante_prec,specialite_prec,lv1,lv2
         -delimiter=';'
         -header=true
         -keyColumns=no_candidat;
         
SELECT *
FROM partie2._candidat;
--------------------------------------------------------------------------------------------------------------------------------------------------------------------
--ETUDIANT

CREATE TABLE partie2._etudiant1 
(
  code_nip           CHARACTER(11) NOT NULL,
  cat_socio_etud     CHARACTER VARYING(100) NOT NULL,
  cat_socio_parent   CHARACTER VARYING(100) NOT NULL,
  bourse_superieur   CHARACTER VARYING(100),
  ine                CHARACTER(11) NOT NULL
);

WbImport -file="data/v_inscriptions.csv"
         -type=text
         -table=partie2._etudiant1
         -mode=insertIgnore
         -continueOnError=true
         -fileColumns=$wb_skip$,$wb_skip$,$wb_skip$,$wb_skip$,code_nip,ine,$wb_skip$,$wb_skip$,$wb_skip$,$wb_skip$,$wb_skip$,$wb_skip$,$wb_skip$,cat_socio_etud,cat_socio_parent,$wb_skip$,$wb_skip$,$wb_skip$,$wb_skip$,$wb_skip$,$wb_skip$,$wb_skip$,bourse_superieur
         -delimiter=';'
         -header=true
         -keyColumns=ine;
         
CREATE TABLE partie2._etudiant2 
(
  mention_bac                CHARACTER VARYING(100),
  serie_bac                  CHARACTER VARYING(100) NOT NULL,
  dominante_bac              CHARACTER VARYING(100),
  specialite_bac             CHARACTER VARYING(100),
  mois_annee_obtention_bac   CHARACTER(40),
  ine                        CHARACTER(11) NOT NULL
);

WbImport -file="data/v_candidatures.csv"
         -type=text
         -table=partie2._etudiant2
         -mode=insertIgnore
         -continueOnError=true
         -fileColumns=$wb_skip$,$wb_skip$,$wb_skip$,$wb_skip$,$wb_skip$,$wb_skip$,$wb_skip$,$wb_skip$,$wb_skip$,$wb_skip$,$wb_skip$,$wb_skip$,$wb_skip$,ine,$wb_skip$,$wb_skip$,$wb_skip$,$wb_skip$,$wb_skip$,$wb_skip$,$wb_skip$,$wb_skip$,$wb_skip$,$wb_skip$,$wb_skip$,$wb_skip$,$wb_skip$,serie_bac,dominante_bac,specialite_bac,mention_bac,mois_annee_obtention_bac
         -delimiter=';'
         -header=true
         -keyColumns=ine;
         
INSERT INTO partie2._etudiant
SELECT DISTINCT ON (e1.ine) e1.code_nip,
       e1.cat_socio_etud,
       e1.cat_socio_parent,
       e1.bourse_superieur,
       e2.mention_bac,
       e2.serie_bac,
       e2.dominante_bac,
       e2.specialite_bac,
       e2.mois_annee_obtention_bac,
       e1.ine
FROM partie2._etudiant1 e1
  JOIN partie2._etudiant2 e2 ON e1.ine = e2.ine
ORDER BY e1.ine;

SELECT *
FROM partie2._etudiant;
--------------------------------------------------------------------------------------------------------------------------------------------------------------------
--SEMESTRE

WbImport -file="data/v_resu_s1.csv"
         -type=text
         -table=partie2._semestre
         -mode=insertIgnore
         -continueOnError=true
         -fileColumns=annee_univ,num_semestre
         -delimiter=';'
         -header=true;
         
WbImport -file="data/v_resu_s2.csv"
         -type=text
         -table=partie2._semestre
         -mode=insertIgnore
         -continueOnError=true
         -fileColumns=annee_univ,num_semestre
         -delimiter=';'
         -header=true;
         
WbImport -file="data/v_resu_s3.csv"
         -type=text
         -table=partie2._semestre
         -mode=insertIgnore
         -continueOnError=true
         -fileColumns=annee_univ,num_semestre
         -delimiter=';'
         -header=true;
         
WbImport -file="data/v_resu_s4.csv"
         -type=text
         -table=partie2._semestre
         -mode=insertIgnore
         -continueOnError=true
         -fileColumns=annee_univ,num_semestre
         -delimiter=';'
         -header=true;
         
SELECT *
FROM partie2._semestre;
--------------------------------------------------------------------------------------------------------------------------------------------------------------------
--INSCRIPTION

-- Il n'y a pas de column amenagement_evaluation donc elle est vide
WbImport -file="data/v_resu_s1.csv"
         -type=text
         -table=partie2._inscription
         -mode=insertIgnore
         -continueOnError=true
         -fileColumns=annee_univ,num_semestre,code_nip,$wb_skip$,$wb_skip$,$wb_skip$,$wb_skip$,$wb_skip$,$wb_skip$,groupe_tp
         -delimiter=';'
         -header=true
         -keyColumns=code_nip;
         
WbImport -file="data/v_resu_s2.csv"
         -type=text
         -table=partie2._inscription
         -mode=insertIgnore
         -continueOnError=true
         -fileColumns=annee_univ,num_semestre,code_nip,$wb_skip$,$wb_skip$,$wb_skip$,$wb_skip$,$wb_skip$,$wb_skip$,groupe_tp
         -delimiter=';'
         -header=true
         -keyColumns=code_nip;
         
WbImport -file="data/v_resu_s3.csv"
         -type=text
         -table=partie2._inscription
         -mode=insertIgnore
         -continueOnError=true
         -fileColumns=annee_univ,num_semestre,code_nip,$wb_skip$,$wb_skip$,$wb_skip$,$wb_skip$,$wb_skip$,$wb_skip$,groupe_tp
         -delimiter=';'
         -header=true
         -keyColumns=code_nip;
         
WbImport -file="data/v_resu_s4.csv"
         -type=text
         -table=partie2._inscription
         -mode=insertIgnore
         -continueOnError=true
         -fileColumns=annee_univ,num_semestre,code_nip,$wb_skip$,$wb_skip$,$wb_skip$,$wb_skip$,$wb_skip$,$wb_skip$,groupe_tp
         -delimiter=';'
         -header=true
         -keyColumns=code_nip;

         
SELECT *
FROM partie2._inscription;
--------------------------------------------------------------------------------------------------------------------------------------------------------------------
--MODULE

WbImport -file="data/ppn.csv"
         -type=text
         -table=partie2._module
         -mode=insertIgnore
         -continueOnError=true
         -fileColumns=id_module,ue,libelle_module
         -delimiter=';'
         -header=true
         -keyColumns=id_module;
         
SELECT *
FROM partie2._module;
--------------------------------------------------------------------------------------------------------------------------------------------------------------------
--PROGRAMME

WbImport -file='data/v_programme.csv'
         -type=text
         -table=partie2._programme
         -mode=insertIgnore
         -continueOnError=true
         -delimiter=';'
         -header=true
         -fileColumns=annee_univ,num_semestre,id_module,coefficient
         -keyColumns=annee_univ,id_semestre,id_module;
         
SELECT *
FROM partie2._programme;
--------------------------------------------------------------------------------------------------------------------------------------------------------------------
--RESULTAT

CREATE TABLE partie2._resultat1 
(
  moyenne        NUMERIC(4,2) NOT NULL,
  code_nip       CHARACTER(11) NOT NULL,
  num_semestre   CHARACTER VARYING(5) NOT NULL,
  annee_univ     CHARACTER(9) NOT NULL
);

WbImport -file="data/v_resu_s1.csv"
         -type=text
         -table=partie2._resultat1
         -mode=insertIgnore
         -continueOnError=true
         -fileColumns=annee_univ,num_semestre,code_nip,$wb_skip$,$wb_skip$,$wb_skip$,$wb_skip$,$wb_skip$,$wb_skip$,$wb_skip$,moyenne
         -delimiter=';'
         -header=true
         -decimal=','
         -keyColumns=code_nip,num_semestre,annee_univ;
         
CREATE TABLE partie2._resultatM 
(
  id_module      CHARACTER VARYING(6) NOT NULL,
  num_semestre   CHARACTER VARYING(5) NOT NULL
);

WbImport -file="data/v_programme.csv"
         -type=text
         -table=partie2._resultatM
         -mode=insertIgnore
         -continueOnError=true
         -fileColumns=$wb_skip$,num_semestre,id_module
         -delimiter=';'
         -header=true
         -decimal=','
         -keyColumns=num_semestre,id_module;
         
CREATE TABLE partie2._resultat2 
(
  moyenne        NUMERIC(4,2) NOT NULL,
  code_nip       CHARACTER(11) NOT NULL,
  num_semestre   CHARACTER VARYING(5) NOT NULL,
  annee_univ     CHARACTER(9) NOT NULL
);

WbImport -file="data/v_resu_s2.csv"
         -type=text
         -table=partie2._resultat2
         -mode=insertIgnore
         -continueOnError=true
         -fileColumns=annee_univ,num_semestre,code_nip,$wb_skip$,$wb_skip$,$wb_skip$,$wb_skip$,$wb_skip$,$wb_skip$,$wb_skip$,moyenne
         -delimiter=';'
         -header=true
         -decimal=','
         -keyColumns=code_nip,num_semestre,annee_univ;
         
CREATE TABLE partie2._resultat3 
(
  moyenne        NUMERIC(4,2) NOT NULL,
  code_nip       CHARACTER(11) NOT NULL,
  num_semestre   CHARACTER VARYING(5) NOT NULL,
  annee_univ     CHARACTER(9) NOT NULL
);

WbImport -file="data/v_resu_s3.csv"
         -type=text
         -table=partie2._resultat3
         -mode=insertIgnore
         -continueOnError=true
         -fileColumns=annee_univ,num_semestre,code_nip,$wb_skip$,$wb_skip$,$wb_skip$,$wb_skip$,$wb_skip$,$wb_skip$,$wb_skip$,moyenne
         -delimiter=';'
         -header=true
         -decimal=','
         -keyColumns=code_nip,num_semestre,annee_univ;
         
CREATE TABLE partie2._resultat4 
(
  moyenne        NUMERIC(4,2) NOT NULL,
  code_nip       CHARACTER(11) NOT NULL,
  num_semestre   CHARACTER VARYING(5) NOT NULL,
  annee_univ     CHARACTER(9) NOT NULL
);

WbImport -file="data/v_resu_s4.csv"
         -type=text
         -table=partie2._resultat4
         -mode=insertIgnore
         -continueOnError=true
         -fileColumns=annee_univ,num_semestre,code_nip,$wb_skip$,$wb_skip$,$wb_skip$,$wb_skip$,$wb_skip$,$wb_skip$,$wb_skip$,moyenne
         -delimiter=';'
         -header=true
         -decimal=','
         -keyColumns=code_nip,num_semestre,annee_univ;
         
INSERT INTO partie2._resultat
(
  moyenne,
  code_nip,
  num_semestre,
  annee_univ,
  id_module
)
SELECT DISTINCT r1.moyenne,
       r1.code_nip,
       r1.num_semestre,
       r1.annee_univ,
       rm.id_module
FROM partie2._resultat1 r1
  JOIN partie2._resultatM rm ON r1.num_semestre = rm.num_semestre
  JOIN _inscription i
    ON r1.code_nip = i.code_nip
   AND r1.num_semestre = i.num_semestre
   AND r1.annee_univ = i.annee_univ;
INSERT INTO partie2._resultat
(
  moyenne,
  code_nip,
  num_semestre,
  annee_univ,
  id_module
)

SELECT DISTINCT r2.moyenne,
       r2.code_nip,
       r2.num_semestre,
       r2.annee_univ,
       rm.id_module
FROM partie2._resultat2 r2
  JOIN partie2._resultatM rm ON r2.num_semestre = rm.num_semestre
  JOIN _inscription i
    ON r2.code_nip = i.code_nip
   AND r2.annee_univ = i.annee_univ
   AND r2.num_semestre = i.num_semestre;
INSERT INTO partie2._resultat
(
  moyenne,
  code_nip,
  num_semestre,
  annee_univ,
  id_module
)

SELECT DISTINCT r3.moyenne,
       r3.code_nip,
       r3.num_semestre,
       r3.annee_univ,
       rm.id_module
FROM partie2._resultat3 r3
  JOIN partie2._resultatM rm ON r3.num_semestre = rm.num_semestre
  JOIN _inscription i
    ON r3.code_nip = i.code_nip
   AND r3.annee_univ = i.annee_univ
   AND r3.num_semestre = i.num_semestre;
INSERT INTO partie2._resultat
(
  moyenne,
  code_nip,
  num_semestre,
  annee_univ,
  id_module
)

SELECT DISTINCT r4.moyenne,
       r4.code_nip,
       r4.num_semestre,
       r4.annee_univ,
       rm.id_module
FROM partie2._resultat4 r4
  JOIN partie2._resultatM rm ON r4.num_semestre = rm.num_semestre
  JOIN _inscription i
    ON r4.code_nip = i.code_nip
   AND r4.annee_univ = i.annee_univ
   AND r4.num_semestre = i.num_semestre;
SELECT *
FROM partie2._resultat;

--------------------------------------------------------------------------------------------------------------------------------------------------------------------
